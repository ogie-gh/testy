name: Inputs as Variables
run-name: InputsasVariables - ${{ inputs.Environment }}

on:
  workflow_dispatch:
    inputs:
      Environment:
        description: 'Enviroment to deploy to'
        type: choice
        options:
          - development
          - staging
          - production
      NoExecute:
        description: 'True to not execute changeset'
        required: false
        default: 'true'
        
jobs:
  test:
    name: test job
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Variables
        shell: bash
        run: |
          # Determine if the environment is production
          [ "${{ inputs.Environment }}" == "production" ] && is_production=true || is_production=false
          echo "is_production=${is_production}" >> $GITHUB_ENV

          # Set noexecchangset based on NoExecute input
          [ "${{ inputs.NoExecute }}" == "true" ] && noexecchangset="--no-execute-changeset" || noexecchangset=""
          echo "noexecchangset=${noexecchangset}" >> $GITHUB_ENV

      - name: echo outputs
        run: |
          echo ${{ env.is_production}}
          echo "${{ inputs.Environment }}"
          echo "inputs is_production"
          echo "${{ inputs.is_production }}"
          echo "${{ inputs.NoExecute }}"
          echo "${{ env.noexecchangset }}"

      - name: run PROD command
        if: env.is_production == true
        run: |
          echo "We hit the PROD command"

      - name: run NONPROD command
        if: env.is_production == false
        run: |
          echo "We hit the NONPROD command"

      - name: set envname
        run: |
         [ "${{ env.is_production }}" == true ] && envname=legacy-prod || envname=legacy-dev
         echo "${envname}"
